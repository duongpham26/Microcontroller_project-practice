

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon May 22 15:33:29 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0000                     	;# 
   174     0001                     	;# 
   175     0002                     	;# 
   176     0003                     	;# 
   177     0004                     	;# 
   178     0005                     	;# 
   179     0006                     	;# 
   180     0007                     	;# 
   181     0008                     	;# 
   182     0009                     	;# 
   183     000A                     	;# 
   184     000B                     	;# 
   185     000C                     	;# 
   186     000D                     	;# 
   187     000E                     	;# 
   188     000E                     	;# 
   189     000F                     	;# 
   190     0010                     	;# 
   191     0011                     	;# 
   192     0012                     	;# 
   193     0013                     	;# 
   194     0014                     	;# 
   195     0015                     	;# 
   196     0015                     	;# 
   197     0016                     	;# 
   198     0017                     	;# 
   199     0018                     	;# 
   200     0019                     	;# 
   201     001A                     	;# 
   202     001B                     	;# 
   203     001B                     	;# 
   204     001C                     	;# 
   205     001D                     	;# 
   206     001E                     	;# 
   207     001F                     	;# 
   208     0081                     	;# 
   209     0085                     	;# 
   210     0086                     	;# 
   211     0087                     	;# 
   212     0088                     	;# 
   213     0089                     	;# 
   214     008C                     	;# 
   215     008D                     	;# 
   216     008E                     	;# 
   217     0091                     	;# 
   218     0092                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0098                     	;# 
   222     0099                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     009F                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0008                     _PORTD	set	8
   234     0047                     _RD7	set	71
   235     0046                     _RD6	set	70
   236     0045                     _RD5	set	69
   237     0044                     _RD4	set	68
   238     0041                     _RD1	set	65
   239     0040                     _RD0	set	64
   240     0447                     _TRISD7	set	1095
   241     0446                     _TRISD6	set	1094
   242     0445                     _TRISD5	set	1093
   243     0444                     _TRISD4	set	1092
   244     0441                     _TRISD1	set	1089
   245     0440                     _TRISD0	set	1088
   246                           
   247                           	psect	strings
   248     0003                     __pstrings:
   249     0003                     stringtab:
   250     0003                     __stringtab:
   251     0003                     stringcode:	
   252                           ;	String table - string pointers are 1 byte each
   253                           
   254     0003                     stringdir:
   255     0003  3000               	movlw	high stringdir
   256     0004  008A               	movwf	10
   257     0005  0804               	movf	4,w
   258     0006  0A84               	incf	4,f
   259     0007  0782               	addwf	2,f
   260     0008                     __stringbase:
   261     0008  3400               	retlw	0
   262     0009                     __end_of__stringtab:
   263     0009                     STR_1:
   264     0009  3441               	retlw	65	;'A'
   265     000A  346E               	retlw	110	;'n'
   266     000B  3420               	retlw	32	;' '
   267     000C  3464               	retlw	100	;'d'
   268     000D  3465               	retlw	101	;'e'
   269     000E  3470               	retlw	112	;'p'
   270     000F  3420               	retlw	32	;' '
   271     0010  3474               	retlw	116	;'t'
   272     0011  3472               	retlw	114	;'r'
   273     0012  3461               	retlw	97	;'a'
   274     0013  3469               	retlw	105	;'i'
   275     0014  3400               	retlw	0
   276     0015                     STR_2:
   277     0015  346C               	retlw	108	;'l'
   278     0016  3461               	retlw	97	;'a'
   279     0017  346D               	retlw	109	;'m'
   280     0018  3400               	retlw	0
   281                           
   282                           	psect	cinit
   283     07FC                     start_initialization:	
   284                           ; #config settings
   285                           
   286     07FC                     __initialization:
   287     07FC                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290     07FC                     __end_of__initialization:
   291     07FC  0183               	clrf	3
   292     07FD  120A  118A  2EBD   	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	cstackCOMMON
   295     0070                     __pcstackCOMMON:
   296     0070                     ?_InitLCD:
   297     0070                     ?_WriteStringToLCD:	
   298                           ; 1 bytes @ 0x0
   299                           
   300     0070                     ?_ToggleEpinOfLCD:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ??_ToggleEpinOfLCD:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ?_WriteCommandToLCD:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_main:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ?_WriteDataToLCD:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           ; 1 bytes @ 0x0
   317     0070                     	ds	1
   318     0071                     ??_WriteCommandToLCD:
   319     0071                     ??_WriteDataToLCD:	
   320                           ; 1 bytes @ 0x1
   321                           
   322                           
   323                           ; 1 bytes @ 0x1
   324     0071                     	ds	1
   325     0072                     WriteCommandToLCD@Command:
   326     0072                     WriteDataToLCD@LCDChar:	
   327                           ; 1 bytes @ 0x2
   328                           
   329                           
   330                           ; 1 bytes @ 0x2
   331     0072                     	ds	1
   332     0073                     ??_InitLCD:
   333     0073                     ??_WriteStringToLCD:	
   334                           ; 1 bytes @ 0x3
   335                           
   336     0073                     ?_GotoxyLCD:	
   337                           ; 1 bytes @ 0x3
   338                           
   339     0073                     WriteStringToLCD@s:	
   340                           ; 1 bytes @ 0x3
   341                           
   342     0073                     GotoxyLCD@row:	
   343                           ; 1 bytes @ 0x3
   344                           
   345                           
   346                           ; 1 bytes @ 0x3
   347     0073                     	ds	1
   348     0074                     ??_GotoxyLCD:
   349                           
   350                           ; 1 bytes @ 0x4
   351     0074                     	ds	2
   352     0076                     GotoxyLCD@col:
   353                           
   354                           ; 1 bytes @ 0x6
   355     0076                     	ds	1
   356     0077                     GotoxyLCD@address:
   357                           
   358                           ; 1 bytes @ 0x7
   359     0077                     	ds	1
   360     0078                     ??_main:
   361                           
   362                           	psect	maintext
   363     06BD                     __pmaintext:	
   364                           ; 1 bytes @ 0x8
   365 ;;
   366 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   367 ;;
   368 ;; *************** function _main *****************
   369 ;; Defined at:
   370 ;;		line 24 in file "main.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : B00/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   384 ;;      Params:         0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0
   387 ;;      Totals:         0       0       0       0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels required when called: 3
   390 ;; This function calls:
   391 ;;		_GotoxyLCD
   392 ;;		_InitLCD
   393 ;;		_WriteStringToLCD
   394 ;; This function is called by:
   395 ;;		Startup code after reset
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399     06BD                     _main:	
   400                           ;psect for function _main
   401                           
   402     06BD                     l788:	
   403                           ;incstack = 0
   404                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   405                           
   406                           
   407                           ;main.c: 26:     InitLCD();
   408     06BD  120A  118A  2771  120A  118A  	fcall	_InitLCD
   409     06C2                     l790:
   410                           
   411                           ;main.c: 28:     WriteStringToLCD("An dep trai");
   412     06C2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   413     06C3  120A  118A  26DA  120A  118A  	fcall	_WriteStringToLCD
   414     06C8                     l792:
   415                           
   416                           ;main.c: 29:     GotoxyLCD(12,1);
   417     06C8  01F3               	clrf	GotoxyLCD@row
   418     06C9  0AF3               	incf	GotoxyLCD@row,f
   419     06CA  300C               	movlw	12
   420     06CB  120A  118A  26F9  120A  118A  	fcall	_GotoxyLCD
   421                           
   422                           ;main.c: 30:     WriteStringToLCD("lam");
   423     06D0  300D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   424     06D1  120A  118A  26DA  120A  118A  	fcall	_WriteStringToLCD
   425     06D6                     l11:	
   426                           ;main.c: 31:     while(1)
   427                           
   428     06D6                     l12:	
   429                           ;main.c: 32:     {}
   430                           
   431     06D6  2ED6               	goto	l11
   432     06D7  120A  118A  2800   	ljmp	start
   433     06DA                     __end_of_main:
   434                           
   435                           	psect	text1
   436     06DA                     __ptext1:	
   437 ;; *************** function _WriteStringToLCD *****************
   438 ;; Defined at:
   439 ;;		line 76 in file "LCD.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;  s               1    wreg     PTR const unsigned char 
   442 ;;		 -> STR_2(4), STR_1(12), 
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  s               1    3[COMMON] PTR const unsigned char 
   445 ;;		 -> STR_2(4), STR_1(12), 
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   455 ;;      Params:         0       0       0       0       0
   456 ;;      Locals:         1       0       0       0       0
   457 ;;      Temps:          0       0       0       0       0
   458 ;;      Totals:         1       0       0       0       0
   459 ;;Total ram usage:        1 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; Hardware stack levels required when called: 2
   462 ;; This function calls:
   463 ;;		_WriteDataToLCD
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469     06DA                     _WriteStringToLCD:	
   470                           ;psect for function _WriteStringToLCD
   471                           
   472                           
   473                           ;incstack = 0
   474                           ; Regs used in _WriteStringToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   475                           ;WriteStringToLCD@s stored from wreg
   476     06DA  00F3               	movwf	WriteStringToLCD@s
   477     06DB                     l766:
   478                           
   479                           ;LCD.c: 76: void WriteStringToLCD(const char *s);LCD.c: 77: {;LCD.c: 78:     while(*s)
   480     06DB  2EEC               	goto	l772
   481     06DC                     l768:
   482                           
   483                           ;LCD.c: 79:         WriteDataToLCD(*s++);
   484     06DC  0873               	movf	WriteStringToLCD@s,w
   485     06DD  0084               	movwf	4
   486     06DE  120A  118A  2003  120A  118A  	fcall	stringdir
   487     06E3  120A  118A  2745  120A  118A  	fcall	_WriteDataToLCD
   488     06E8                     l770:
   489     06E8  3001               	movlw	1
   490     06E9  00FF               	movwf	btemp+1
   491     06EA  087F               	movf	btemp+1,w
   492     06EB  07F3               	addwf	WriteStringToLCD@s,f
   493     06EC                     l772:
   494                           
   495                           ;LCD.c: 78:     while(*s)
   496     06EC  0873               	movf	WriteStringToLCD@s,w
   497     06ED  0084               	movwf	4
   498     06EE  120A  118A  2003  120A  118A  	fcall	stringdir
   499     06F3  3A00               	xorlw	0
   500     06F4  1D03               	skipz
   501     06F5  2EF7               	goto	u51
   502     06F6  2EF8               	goto	u50
   503     06F7                     u51:
   504     06F7  2EDC               	goto	l768
   505     06F8                     u50:
   506     06F8                     l64:
   507     06F8  0008               	return
   508     06F9                     __end_of_WriteStringToLCD:
   509                           
   510                           	psect	text2
   511     0745                     __ptext2:	
   512 ;; *************** function _WriteDataToLCD *****************
   513 ;; Defined at:
   514 ;;		line 65 in file "LCD.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;  LCDChar         1    wreg     unsigned char 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  LCDChar         1    2[COMMON] unsigned char 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   528 ;;      Params:         0       0       0       0       0
   529 ;;      Locals:         1       0       0       0       0
   530 ;;      Temps:          1       0       0       0       0
   531 ;;      Totals:         2       0       0       0       0
   532 ;;Total ram usage:        2 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 1
   535 ;; This function calls:
   536 ;;		_ToggleEpinOfLCD
   537 ;; This function is called by:
   538 ;;		_WriteStringToLCD
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542     0745                     _WriteDataToLCD:	
   543                           ;psect for function _WriteDataToLCD
   544                           
   545                           
   546                           ;incstack = 0
   547                           ; Regs used in _WriteDataToLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   548                           ;WriteDataToLCD@LCDChar stored from wreg
   549     0745  00F2               	movwf	WriteDataToLCD@LCDChar
   550     0746                     l682:
   551                           
   552                           ;LCD.c: 65: void WriteDataToLCD(char LCDChar);LCD.c: 66: {;LCD.c: 67:     RD1 = 1;
   553     0746  1283               	bcf	3,5	;RP0=0, select bank0
   554     0747  1303               	bcf	3,6	;RP1=0, select bank0
   555     0748  1488               	bsf	8,1	;volatile
   556     0749                     l684:
   557                           
   558                           ;LCD.c: 68:     PORTD &= 0x0F;
   559     0749  300F               	movlw	15
   560     074A  00FF               	movwf	btemp+1
   561     074B  087F               	movf	btemp+1,w
   562     074C  0588               	andwf	8,f	;volatile
   563                           
   564                           ;LCD.c: 69:     PORTD |= (LCDChar&0xF0);
   565     074D  0872               	movf	WriteDataToLCD@LCDChar,w
   566     074E  39F0               	andlw	240
   567     074F  00FF               	movwf	btemp+1
   568     0750  087F               	movf	btemp+1,w
   569     0751  0488               	iorwf	8,f	;volatile
   570     0752                     l686:
   571                           
   572                           ;LCD.c: 70:     ToggleEpinOfLCD();
   573     0752  120A  118A  26A8  120A  118A  	fcall	_ToggleEpinOfLCD
   574     0757                     l688:
   575                           
   576                           ;LCD.c: 71:     PORTD &= 0x0F;
   577     0757  300F               	movlw	15
   578     0758  00FF               	movwf	btemp+1
   579     0759  087F               	movf	btemp+1,w
   580     075A  1283               	bcf	3,5	;RP0=0, select bank0
   581     075B  1303               	bcf	3,6	;RP1=0, select bank0
   582     075C  0588               	andwf	8,f	;volatile
   583     075D                     l690:
   584                           
   585                           ;LCD.c: 72:     PORTD |= ((LCDChar<<4)&0xF0);
   586     075D  0872               	movf	WriteDataToLCD@LCDChar,w
   587     075E  00F1               	movwf	??_WriteDataToLCD
   588     075F  3003               	movlw	3
   589     0760                     u25:
   590     0760  1003               	clrc
   591     0761  0DF1               	rlf	??_WriteDataToLCD,f
   592     0762  3EFF               	addlw	-1
   593     0763  1D03               	skipz
   594     0764  2F60               	goto	u25
   595     0765  1003               	clrc
   596     0766  0D71               	rlf	??_WriteDataToLCD,w
   597     0767  39F0               	andlw	240
   598     0768  00FF               	movwf	btemp+1
   599     0769  087F               	movf	btemp+1,w
   600     076A  0488               	iorwf	8,f	;volatile
   601     076B                     l692:
   602                           
   603                           ;LCD.c: 73:     ToggleEpinOfLCD();
   604     076B  120A  118A  26A8  120A  118A  	fcall	_ToggleEpinOfLCD
   605     0770                     l58:
   606     0770  0008               	return
   607     0771                     __end_of_WriteDataToLCD:
   608                           
   609                           	psect	text3
   610     0771                     __ptext3:	
   611 ;; *************** function _InitLCD *****************
   612 ;; Defined at:
   613 ;;		line 4 in file "LCD.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   627 ;;      Params:         0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0
   629 ;;      Temps:          2       0       0       0       0
   630 ;;      Totals:         2       0       0       0       0
   631 ;;Total ram usage:        2 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 2
   634 ;; This function calls:
   635 ;;		_ToggleEpinOfLCD
   636 ;;		_WriteCommandToLCD
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642     0771                     _InitLCD:	
   643                           ;psect for function _InitLCD
   644                           
   645     0771                     l694:	
   646                           ;incstack = 0
   647                           ; Regs used in _InitLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   648                           
   649                           
   650                           ;LCD.c: 7:     RD0 = 0;
   651     0771  1283               	bcf	3,5	;RP0=0, select bank0
   652     0772  1303               	bcf	3,6	;RP1=0, select bank0
   653     0773  1008               	bcf	8,0	;volatile
   654                           
   655                           ;LCD.c: 8:     RD1 = 0;
   656     0774  1088               	bcf	8,1	;volatile
   657                           
   658                           ;LCD.c: 9:     RD4 = 0;
   659     0775  1208               	bcf	8,4	;volatile
   660                           
   661                           ;LCD.c: 10:     RD5 = 0;
   662     0776  1288               	bcf	8,5	;volatile
   663                           
   664                           ;LCD.c: 11:     RD6 = 0;
   665     0777  1308               	bcf	8,6	;volatile
   666                           
   667                           ;LCD.c: 12:     RD7 = 0;
   668     0778  1388               	bcf	8,7	;volatile
   669                           
   670                           ;LCD.c: 13:     TRISD0 = 0;
   671     0779  1683               	bsf	3,5	;RP0=1, select bank1
   672     077A  1303               	bcf	3,6	;RP1=0, select bank1
   673     077B  1008               	bcf	8,0	;volatile
   674                           
   675                           ;LCD.c: 14:     TRISD1 = 0;
   676     077C  1088               	bcf	8,1	;volatile
   677                           
   678                           ;LCD.c: 15:     TRISD4 = 0;
   679     077D  1208               	bcf	8,4	;volatile
   680                           
   681                           ;LCD.c: 16:     TRISD5 = 0;
   682     077E  1288               	bcf	8,5	;volatile
   683                           
   684                           ;LCD.c: 17:     TRISD6 = 0;
   685     077F  1308               	bcf	8,6	;volatile
   686                           
   687                           ;LCD.c: 18:     TRISD7 = 0;
   688     0780  1388               	bcf	8,7	;volatile
   689     0781                     l696:
   690                           
   691                           ;LCD.c: 21:     _delay((unsigned long)((40)*(8000000/4000.0)));
   692     0781  3068               	movlw	104
   693     0782  00F4               	movwf	??_InitLCD+1
   694     0783  30E4               	movlw	228
   695     0784  00F3               	movwf	??_InitLCD
   696     0785                     u77:
   697     0785  0BF3               	decfsz	??_InitLCD,f
   698     0786  2F85               	goto	u77
   699     0787  0BF4               	decfsz	??_InitLCD+1,f
   700     0788  2F85               	goto	u77
   701     0789  0000               	nop
   702     078A                     l698:
   703                           
   704                           ;LCD.c: 22:     PORTD &= 0x0F;
   705     078A  300F               	movlw	15
   706     078B  00FF               	movwf	btemp+1
   707     078C  087F               	movf	btemp+1,w
   708     078D  1283               	bcf	3,5	;RP0=0, select bank0
   709     078E  1303               	bcf	3,6	;RP1=0, select bank0
   710     078F  0588               	andwf	8,f	;volatile
   711     0790                     l700:
   712                           
   713                           ;LCD.c: 23:     PORTD |= 0x30;
   714     0790  3030               	movlw	48
   715     0791  00FF               	movwf	btemp+1
   716     0792  087F               	movf	btemp+1,w
   717     0793  0488               	iorwf	8,f	;volatile
   718     0794                     l702:
   719                           
   720                           ;LCD.c: 24:     ToggleEpinOfLCD();
   721     0794  120A  118A  26A8  120A  118A  	fcall	_ToggleEpinOfLCD
   722     0799                     l704:
   723                           
   724                           ;LCD.c: 25:     _delay((unsigned long)((6)*(8000000/4000.0)));
   725     0799  3010               	movlw	16
   726     079A  00F4               	movwf	??_InitLCD+1
   727     079B  3094               	movlw	148
   728     079C  00F3               	movwf	??_InitLCD
   729     079D                     u87:
   730     079D  0BF3               	decfsz	??_InitLCD,f
   731     079E  2F9D               	goto	u87
   732     079F  0BF4               	decfsz	??_InitLCD+1,f
   733     07A0  2F9D               	goto	u87
   734     07A1  0000               	nop
   735     07A2                     l706:
   736                           
   737                           ;LCD.c: 26:     PORTD &= 0x0F;
   738     07A2  300F               	movlw	15
   739     07A3  00FF               	movwf	btemp+1
   740     07A4  087F               	movf	btemp+1,w
   741     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   742     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   743     07A7  0588               	andwf	8,f	;volatile
   744     07A8                     l708:
   745                           
   746                           ;LCD.c: 27:     PORTD |= 0x30;
   747     07A8  3030               	movlw	48
   748     07A9  00FF               	movwf	btemp+1
   749     07AA  087F               	movf	btemp+1,w
   750     07AB  0488               	iorwf	8,f	;volatile
   751                           
   752                           ;LCD.c: 28:     ToggleEpinOfLCD();
   753     07AC  120A  118A  26A8  120A  118A  	fcall	_ToggleEpinOfLCD
   754     07B1                     l710:
   755                           
   756                           ;LCD.c: 29:     _delay((unsigned long)((300)*(8000000/4000000.0)));
   757     07B1  30C7               	movlw	199
   758     07B2  00F3               	movwf	??_InitLCD
   759     07B3                     u97:
   760     07B3  0BF3               	decfsz	??_InitLCD,f
   761     07B4  2FB3               	goto	u97
   762     07B5  2FB6               	nop2
   763     07B6                     l712:
   764                           
   765                           ;LCD.c: 30:     PORTD &= 0x0F;
   766     07B6  300F               	movlw	15
   767     07B7  00FF               	movwf	btemp+1
   768     07B8  087F               	movf	btemp+1,w
   769     07B9  1283               	bcf	3,5	;RP0=0, select bank0
   770     07BA  1303               	bcf	3,6	;RP1=0, select bank0
   771     07BB  0588               	andwf	8,f	;volatile
   772     07BC                     l714:
   773                           
   774                           ;LCD.c: 31:     PORTD |= 0x30;
   775     07BC  3030               	movlw	48
   776     07BD  00FF               	movwf	btemp+1
   777     07BE  087F               	movf	btemp+1,w
   778     07BF  0488               	iorwf	8,f	;volatile
   779     07C0                     l716:
   780                           
   781                           ;LCD.c: 32:     ToggleEpinOfLCD();
   782     07C0  120A  118A  26A8  120A  118A  	fcall	_ToggleEpinOfLCD
   783                           
   784                           ;LCD.c: 33:     _delay((unsigned long)((2)*(8000000/4000.0)));
   785     07C5  3006               	movlw	6
   786     07C6  00F4               	movwf	??_InitLCD+1
   787     07C7  3030               	movlw	48
   788     07C8  00F3               	movwf	??_InitLCD
   789     07C9                     u107:
   790     07C9  0BF3               	decfsz	??_InitLCD,f
   791     07CA  2FC9               	goto	u107
   792     07CB  0BF4               	decfsz	??_InitLCD+1,f
   793     07CC  2FC9               	goto	u107
   794     07CD  0000               	nop
   795     07CE                     l718:
   796                           
   797                           ;LCD.c: 34:     PORTD &= 0x0F;
   798     07CE  300F               	movlw	15
   799     07CF  00FF               	movwf	btemp+1
   800     07D0  087F               	movf	btemp+1,w
   801     07D1  1283               	bcf	3,5	;RP0=0, select bank0
   802     07D2  1303               	bcf	3,6	;RP1=0, select bank0
   803     07D3  0588               	andwf	8,f	;volatile
   804     07D4                     l720:
   805                           
   806                           ;LCD.c: 35:     PORTD |= 0x20;
   807     07D4  1688               	bsf	8,5	;volatile
   808     07D5                     l722:
   809                           
   810                           ;LCD.c: 36:     ToggleEpinOfLCD();
   811     07D5  120A  118A  26A8  120A  118A  	fcall	_ToggleEpinOfLCD
   812     07DA                     l724:
   813                           
   814                           ;LCD.c: 37:     _delay((unsigned long)((2)*(8000000/4000.0)));
   815     07DA  3006               	movlw	6
   816     07DB  00F4               	movwf	??_InitLCD+1
   817     07DC  3030               	movlw	48
   818     07DD  00F3               	movwf	??_InitLCD
   819     07DE                     u117:
   820     07DE  0BF3               	decfsz	??_InitLCD,f
   821     07DF  2FDE               	goto	u117
   822     07E0  0BF4               	decfsz	??_InitLCD+1,f
   823     07E1  2FDE               	goto	u117
   824     07E2  0000               	nop
   825     07E3                     l726:
   826                           
   827                           ;LCD.c: 40:     WriteCommandToLCD(0x28);
   828     07E3  3028               	movlw	40
   829     07E4  120A  118A  2719  120A  118A  	fcall	_WriteCommandToLCD
   830     07E9                     l728:
   831                           
   832                           ;LCD.c: 41:     WriteCommandToLCD(0x0D);
   833     07E9  300D               	movlw	13
   834     07EA  120A  118A  2719  120A  118A  	fcall	_WriteCommandToLCD
   835     07EF                     l730:
   836                           
   837                           ;LCD.c: 42:     WriteCommandToLCD(0x01);
   838     07EF  3001               	movlw	1
   839     07F0  120A  118A  2719  120A  118A  	fcall	_WriteCommandToLCD
   840     07F5                     l732:
   841                           
   842                           ;LCD.c: 43:     WriteCommandToLCD(0x06);
   843     07F5  3006               	movlw	6
   844     07F6  120A  118A  2719  120A  118A  	fcall	_WriteCommandToLCD
   845     07FB                     l49:
   846     07FB  0008               	return
   847     07FC                     __end_of_InitLCD:
   848                           
   849                           	psect	text4
   850     06F9                     __ptext4:	
   851 ;; *************** function _GotoxyLCD *****************
   852 ;; Defined at:
   853 ;;		line 90 in file "LCD.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  col             1    wreg     unsigned char 
   856 ;;  row             1    3[COMMON] unsigned char 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  col             1    6[COMMON] unsigned char 
   859 ;;  address         1    7[COMMON] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         1       0       0       0       0
   870 ;;      Locals:         2       0       0       0       0
   871 ;;      Temps:          2       0       0       0       0
   872 ;;      Totals:         5       0       0       0       0
   873 ;;Total ram usage:        5 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; Hardware stack levels required when called: 2
   876 ;; This function calls:
   877 ;;		_WriteCommandToLCD
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883     06F9                     _GotoxyLCD:	
   884                           ;psect for function _GotoxyLCD
   885                           
   886                           
   887                           ;incstack = 0
   888                           ; Regs used in _GotoxyLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   889                           ;GotoxyLCD@col stored from wreg
   890     06F9  00F6               	movwf	GotoxyLCD@col
   891     06FA                     l774:
   892                           
   893                           ;LCD.c: 90: void GotoxyLCD(unsigned char col, unsigned char row);LCD.c: 91: {;LCD.c: 92:
      +                            unsigned char address;;LCD.c: 93:  if(row!=0)
   894     06FA  0873               	movf	GotoxyLCD@row,w
   895     06FB  1903               	btfsc	3,2
   896     06FC  2EFE               	goto	u61
   897     06FD  2EFF               	goto	u60
   898     06FE                     u61:
   899     06FE  2F06               	goto	l780
   900     06FF                     u60:
   901     06FF                     l776:
   902                           
   903                           ;LCD.c: 94:  {;LCD.c: 95:         address=0xc0;
   904     06FF  30C0               	movlw	192
   905     0700  00F7               	movwf	GotoxyLCD@address
   906     0701                     l778:
   907                           
   908                           ;LCD.c: 96:         address += col;
   909     0701  0876               	movf	GotoxyLCD@col,w
   910     0702  00FF               	movwf	btemp+1
   911     0703  087F               	movf	btemp+1,w
   912     0704  07F7               	addwf	GotoxyLCD@address,f
   913                           
   914                           ;LCD.c: 97:     }
   915     0705  2F09               	goto	l784
   916     0706                     l780:
   917                           
   918                           ;LCD.c: 99:     {;LCD.c: 100:         address=0x80;
   919     0706  3080               	movlw	128
   920     0707  00F7               	movwf	GotoxyLCD@address
   921     0708  2F01               	goto	l778
   922     0709                     l784:
   923                           
   924                           ;LCD.c: 103:     WriteCommandToLCD(address);
   925     0709  0877               	movf	GotoxyLCD@address,w
   926     070A  120A  118A  2719  120A  118A  	fcall	_WriteCommandToLCD
   927     070F                     l786:
   928                           
   929                           ;LCD.c: 104:     _delay((unsigned long)((40)*(8000000/4000.0)));
   930     070F  3068               	movlw	104
   931     0710  00F5               	movwf	??_GotoxyLCD+1
   932     0711  30E4               	movlw	228
   933     0712  00F4               	movwf	??_GotoxyLCD
   934     0713                     u127:
   935     0713  0BF4               	decfsz	??_GotoxyLCD,f
   936     0714  2F13               	goto	u127
   937     0715  0BF5               	decfsz	??_GotoxyLCD+1,f
   938     0716  2F13               	goto	u127
   939     0717  0000               	nop
   940     0718                     l72:
   941     0718  0008               	return
   942     0719                     __end_of_GotoxyLCD:
   943                           
   944                           	psect	text5
   945     0719                     __ptext5:	
   946 ;; *************** function _WriteCommandToLCD *****************
   947 ;; Defined at:
   948 ;;		line 54 in file "LCD.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  Command         1    wreg     unsigned char 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  Command         1    2[COMMON] unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   962 ;;      Params:         0       0       0       0       0
   963 ;;      Locals:         1       0       0       0       0
   964 ;;      Temps:          1       0       0       0       0
   965 ;;      Totals:         2       0       0       0       0
   966 ;;Total ram usage:        2 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 1
   969 ;; This function calls:
   970 ;;		_ToggleEpinOfLCD
   971 ;; This function is called by:
   972 ;;		_InitLCD
   973 ;;		_GotoxyLCD
   974 ;;		_ClearLCDScreen
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978     0719                     _WriteCommandToLCD:	
   979                           ;psect for function _WriteCommandToLCD
   980                           
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in _WriteCommandToLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   984                           ;WriteCommandToLCD@Command stored from wreg
   985     0719  00F2               	movwf	WriteCommandToLCD@Command
   986     071A                     l670:
   987                           
   988                           ;LCD.c: 54: void WriteCommandToLCD(unsigned char Command);LCD.c: 55: {;LCD.c: 56:     RD
      +                          1 = 0;
   989     071A  1283               	bcf	3,5	;RP0=0, select bank0
   990     071B  1303               	bcf	3,6	;RP1=0, select bank0
   991     071C  1088               	bcf	8,1	;volatile
   992     071D                     l672:
   993                           
   994                           ;LCD.c: 57:     PORTD &= 0x0F;
   995     071D  300F               	movlw	15
   996     071E  00FF               	movwf	btemp+1
   997     071F  087F               	movf	btemp+1,w
   998     0720  0588               	andwf	8,f	;volatile
   999                           
  1000                           ;LCD.c: 58:     PORTD |= (Command&0xF0);
  1001     0721  0872               	movf	WriteCommandToLCD@Command,w
  1002     0722  39F0               	andlw	240
  1003     0723  00FF               	movwf	btemp+1
  1004     0724  087F               	movf	btemp+1,w
  1005     0725  0488               	iorwf	8,f	;volatile
  1006     0726                     l674:
  1007                           
  1008                           ;LCD.c: 59:     ToggleEpinOfLCD();
  1009     0726  120A  118A  26A8  120A  118A  	fcall	_ToggleEpinOfLCD
  1010     072B                     l676:
  1011                           
  1012                           ;LCD.c: 60:     PORTD &= 0x0F;
  1013     072B  300F               	movlw	15
  1014     072C  00FF               	movwf	btemp+1
  1015     072D  087F               	movf	btemp+1,w
  1016     072E  1283               	bcf	3,5	;RP0=0, select bank0
  1017     072F  1303               	bcf	3,6	;RP1=0, select bank0
  1018     0730  0588               	andwf	8,f	;volatile
  1019     0731                     l678:
  1020                           
  1021                           ;LCD.c: 61:     PORTD |= ((Command<<4)&0xF0);
  1022     0731  0872               	movf	WriteCommandToLCD@Command,w
  1023     0732  00F1               	movwf	??_WriteCommandToLCD
  1024     0733  3003               	movlw	3
  1025     0734                     u15:
  1026     0734  1003               	clrc
  1027     0735  0DF1               	rlf	??_WriteCommandToLCD,f
  1028     0736  3EFF               	addlw	-1
  1029     0737  1D03               	skipz
  1030     0738  2F34               	goto	u15
  1031     0739  1003               	clrc
  1032     073A  0D71               	rlf	??_WriteCommandToLCD,w
  1033     073B  39F0               	andlw	240
  1034     073C  00FF               	movwf	btemp+1
  1035     073D  087F               	movf	btemp+1,w
  1036     073E  0488               	iorwf	8,f	;volatile
  1037     073F                     l680:
  1038                           
  1039                           ;LCD.c: 62:     ToggleEpinOfLCD();
  1040     073F  120A  118A  26A8  120A  118A  	fcall	_ToggleEpinOfLCD
  1041     0744                     l55:
  1042     0744  0008               	return
  1043     0745                     __end_of_WriteCommandToLCD:
  1044                           
  1045                           	psect	text6
  1046     06A8                     __ptext6:	
  1047 ;; *************** function _ToggleEpinOfLCD *****************
  1048 ;; Defined at:
  1049 ;;		line 46 in file "LCD.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0
  1065 ;;      Temps:          1       0       0       0       0
  1066 ;;      Totals:         1       0       0       0       0
  1067 ;;Total ram usage:        1 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_InitLCD
  1073 ;;		_WriteCommandToLCD
  1074 ;;		_WriteDataToLCD
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078     06A8                     _ToggleEpinOfLCD:	
  1079                           ;psect for function _ToggleEpinOfLCD
  1080                           
  1081     06A8                     l664:	
  1082                           ;incstack = 0
  1083                           ; Regs used in _ToggleEpinOfLCD: [wreg]
  1084                           
  1085                           
  1086                           ;LCD.c: 48:     RD0 = 1;
  1087     06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1088     06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1089     06AA  1408               	bsf	8,0	;volatile
  1090     06AB                     l666:
  1091                           
  1092                           ;LCD.c: 49:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  1093     06AB  30C7               	movlw	199
  1094     06AC  00F0               	movwf	??_ToggleEpinOfLCD
  1095     06AD                     u137:
  1096     06AD  2EAE               	nop2
  1097     06AE  0BF0               	decfsz	??_ToggleEpinOfLCD,f
  1098     06AF  2EAD               	goto	u137
  1099     06B0  2EB1               	nop2
  1100     06B1  2EB2               	nop2
  1101     06B2                     l668:
  1102                           
  1103                           ;LCD.c: 50:     RD0 = 0;
  1104     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1105     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1106     06B4  1008               	bcf	8,0	;volatile
  1107                           
  1108                           ;LCD.c: 51:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  1109     06B5  30C7               	movlw	199
  1110     06B6  00F0               	movwf	??_ToggleEpinOfLCD
  1111     06B7                     u147:
  1112     06B7  2EB8               	nop2
  1113     06B8  0BF0               	decfsz	??_ToggleEpinOfLCD,f
  1114     06B9  2EB7               	goto	u147
  1115     06BA  2EBB               	nop2
  1116     06BB  2EBC               	nop2
  1117     06BC                     l52:
  1118     06BC  0008               	return
  1119     06BD                     __end_of_ToggleEpinOfLCD:
  1120     007E                     btemp	set	126	;btemp
  1121     007E                     wtemp0	set	126
  1122                           
  1123                           	psect	idloc
  1124                           
  1125                           ;Config register IDLOC0 @ 0x2000
  1126                           ;	unspecified, using default values
  1127     2000                     	org	8192
  1128     2000  3FFF               	dw	16383
  1129                           
  1130                           ;Config register IDLOC1 @ 0x2001
  1131                           ;	unspecified, using default values
  1132     2001                     	org	8193
  1133     2001  3FFF               	dw	16383
  1134                           
  1135                           ;Config register IDLOC2 @ 0x2002
  1136                           ;	unspecified, using default values
  1137     2002                     	org	8194
  1138     2002  3FFF               	dw	16383
  1139                           
  1140                           ;Config register IDLOC3 @ 0x2003
  1141                           ;	unspecified, using default values
  1142     2003                     	org	8195
  1143     2003  3FFF               	dw	16383
  1144                           
  1145                           	psect	config
  1146                           
  1147                           ;Config register CONFIG @ 0x2007
  1148                           ;	Oscillator Selection bits
  1149                           ;	FOSC = HS, HS oscillator
  1150                           ;	Watchdog Timer Enable bit
  1151                           ;	WDTE = OFF, WDT disabled
  1152                           ;	Power-up Timer Enable bit
  1153                           ;	PWRTE = OFF, PWRT disabled
  1154                           ;	Brown-out Reset Enable bit
  1155                           ;	BOREN = OFF, BOR disabled
  1156                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1157                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1158                           ;	Data EEPROM Memory Code Protection bit
  1159                           ;	CPD = OFF, Data EEPROM code protection off
  1160                           ;	Flash Program Memory Write Enable bits
  1161                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1162                           ;	In-Circuit Debugger Mode bit
  1163                           ;	DEBUG = 0x1, unprogrammed default
  1164                           ;	Flash Program Memory Code Protection bit
  1165                           ;	CP = OFF, Code protection off
  1166     2007                     	org	8199
  1167     2007  3F3A               	dw	16186

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    WriteStringToLCD@s	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_2(CODE[4]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_GotoxyLCD
    _WriteStringToLCD->_WriteDataToLCD
    _WriteDataToLCD->_ToggleEpinOfLCD
    _InitLCD->_WriteCommandToLCD
    _GotoxyLCD->_WriteCommandToLCD
    _WriteCommandToLCD->_ToggleEpinOfLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     369
                          _GotoxyLCD
                            _InitLCD
                   _WriteStringToLCD
 ---------------------------------------------------------------------------------
 (1) _WriteStringToLCD                                     1     1      0     141
                                              3 COMMON     1     1      0
                     _WriteDataToLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataToLCD                                       2     2      0      30
                                              1 COMMON     2     2      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              2     2      0      30
                                              3 COMMON     2     2      0
                    _ToggleEpinOfLCD
                  _WriteCommandToLCD
 ---------------------------------------------------------------------------------
 (1) _GotoxyLCD                                            5     4      1     198
                                              3 COMMON     5     4      1
                  _WriteCommandToLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCommandToLCD                                    2     2      0      30
                                              1 COMMON     2     2      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (3) _ToggleEpinOfLCD                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GotoxyLCD
     _WriteCommandToLCD
       _ToggleEpinOfLCD
   _InitLCD
     _ToggleEpinOfLCD
     _WriteCommandToLCD
   _WriteStringToLCD
     _WriteDataToLCD
       _ToggleEpinOfLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon May 22 15:33:29 2023

                        pc 0002                         l11 06D6                         l12 06D6  
                       l52 06BC                         l55 0744                         l72 0718  
                       l64 06F8                         l49 07FB                         l58 0770  
                       u15 0734                         u25 0760                         u50 06F8  
                       u51 06F7                         u60 06FF                         u61 06FE  
                       u77 0785                         u87 079D                         u97 07B3  
                       fsr 0004                        l700 0790                        l710 07B1  
                      l702 0794                        l720 07D4                        l712 07B6  
                      l704 0799                        l730 07EF                        l722 07D5  
                      l714 07BC                        l706 07A2                        l732 07F5  
                      l724 07DA                        l716 07C0                        l708 07A8  
                      l670 071A                        l726 07E3                        l718 07CE  
                      l664 06A8                        l680 073F                        l672 071D  
                      l728 07E9                        l666 06AB                        l674 0726  
                      l690 075D                        l682 0746                        l770 06E8  
                      l668 06B2                        l676 072B                        l780 0706  
                      l692 076B                        l684 0749                        l772 06EC  
                      l678 0731                        l774 06FA                        l694 0771  
                      l686 0752                        l766 06DB                        l790 06C2  
                      l784 0709                        l776 06FF                        l696 0781  
                      l688 0757                        l768 06DC                        l792 06C8  
                      l786 070F                        l778 0701                        l698 078A  
                      l788 06BD                        _RD0 0040                        _RD1 0041  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u107 07C9                        u117 07DE  
                      u127 0713                        u137 06AD                        u147 06B7  
                      fsr0 0004                       STR_1 0009                       STR_2 0015  
                     _main 06BD                       btemp 007E                       start 0000  
          __end_of_InitLCD 07FC                      ?_main 0070                      _PORTD 0008  
                    pclath 000A                      status 0003                      wtemp0 007E  
          _ToggleEpinOfLCD 06A8            __initialization 07FC               __end_of_main 06DA  
                   ??_main 0078                     _TRISD0 0440                     _TRISD1 0441  
                   _TRISD4 0444                     _TRISD5 0445                     _TRISD6 0446  
                   _TRISD7 0447                  ??_InitLCD 0073           GotoxyLCD@address 0077  
        WriteStringToLCD@s 0073          ?_WriteStringToLCD 0070         ??_WriteStringToLCD 0073  
  __end_of_ToggleEpinOfLCD 06BD    __end_of__initialization 07FC             __pcstackCOMMON 0070  
 WriteCommandToLCD@Command 0072          __end_of_GotoxyLCD 0719             _WriteDataToLCD 0745  
               __pmaintext 06BD      WriteDataToLCD@LCDChar 0072     __end_of_WriteDataToLCD 0771  
               __stringtab 0003           ?_ToggleEpinOfLCD 0070               GotoxyLCD@col 0076  
             GotoxyLCD@row 0073                    _InitLCD 0771                    __ptext1 06DA  
                  __ptext2 0745                    __ptext3 0771                    __ptext4 06F9  
                  __ptext5 0719                    __ptext6 06A8       end_of_initialization 07FC  
          ?_WriteDataToLCD 0070        start_initialization 07FC                  _GotoxyLCD 06F9  
                ___latbits 0002                 ?_GotoxyLCD 0073                   ?_InitLCD 0070  
                __pstrings 0003           ??_WriteDataToLCD 0071           _WriteStringToLCD 06DA  
              __stringbase 0008                ??_GotoxyLCD 0074          _WriteCommandToLCD 0719  
       ?_WriteCommandToLCD 0070        ??_WriteCommandToLCD 0071         __end_of__stringtab 0009  
__end_of_WriteCommandToLCD 0745          ??_ToggleEpinOfLCD 0070                  stringcode 0003  
 __end_of_WriteStringToLCD 06F9                   stringdir 0003                   stringtab 0003  
